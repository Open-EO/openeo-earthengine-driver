{
  "EarthEngineError": {
    "message": "Process '{process}' reports: {message}"
  },
  "LabelMismatch": {
    "message": "The number of labels in the parameters `source` and `target` don't match."
  },
  "LabelNotAvailable": {
    "message": "A label with the specified name does not exist."
  },
  "LabelExists": {
    "message": "A label with the specified name exists."
  },
  "DimensionTypeNotAvailable": {
    "message": "A dimension of type '{type}' does not exist in the data cube given in process '{process}'."
  },
  "DimensionNotAvailable": {
    "message": "A dimension with the name specified in process '{process}' parameter '{parameter}' does not exist."
  },
  "ProcessGraphIdDoesntMatch": {
    "message": "The id in the parameter and the id in the document don't match."
  },
  "PredefinedProcessExists": {
    "message": "A pre-defined process with the given id exists."
  },
  "DataCubeEmpty": {
    "message": "The file format doesn't support storing empty data cubes."
  },
  "TemporalExtentEmpty": {
    "message": "The temporal extent is empty. The second instant in time must always be greater/later than the first instant in time."
  },
  "DimensionExists": {
    "message": "A dimension with the specified name already exists."
  },
  "ArrayElementNotAvailable": {
    "message": "The array has no element with the specified index or label '{x}'."
  },
  "ArrayElementParameterMissing": {
    "message": "The process `array_element` requires either the `index` or `labels` parameter to be set."
  },
  "ArrayElementParameterConflict": {
    "message": "The process `array_element` only allows that either the `index` or the `labels` parameter is set."
  },
  "ArrayNotLabeled": {
    "message": "The array is not a labeled array, but the `label` parameter is set. Use the `index` instead."
  },
	"ParameterValueUnsupported": {
		"message": "The value passed for parameter '{parameter}' is unsupported: {reason}"
	},
	"ParameterValueInvalid": {
		"message": "The value passed for parameter '{parameter}' is invalid: {reason}"
	}
}
